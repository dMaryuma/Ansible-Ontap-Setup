---
- hosts: localhost
  gather_facts: false
  collections:
    - netapp.ontap
  vars_files: "{{ file }}"
  vars:
    login: &login
      username: "{{ username }}"
      password: "{{ password }}"
      https: true
      validate_certs: false
  name: "Build cluster: {{ cluster_name }}"

  tasks:
  - name: create cluster
    na_ontap_cluster:
      state: present
      cluster_name: "{{ cluster_name }}"
      hostname: "{{ hosts['node1'].mgmt_ip }}"
      #node_name: "{{ hosts['node1'].name }}"
      use_rest: never
      <<: *login

  - name: Create Private cluster lif for node2
    na_ontap_interface:
      state: present
      interface_name: "clus3"
      vserver: "Cluster"
      address: "{{ hosts['node2'].cluster.private_ip }}"
      netmask: "{{ hosts['node2'].cluster.netmask }}"
      role: cluster
      home_node: "localhost"
      home_port: "{{ hosts['node2'].cluster.home_port }}"
      hostname: "{{ hosts['node2'].mgmt_ip }}"
      <<: *login

  - name: "Join Node to {{ cluster_name }}"
    na_ontap_cluster:
      state: present
      cluster_ip_address:  "{{ hosts['node2'].cluster.private_ip }}"
      node_name: "{{ hosts['node2'].name }}"
      hostname: "{{ hosts['node1'].mgmt_ip }}"
      use_rest: Never
      <<: *login

  - name: Create cluster mgmt lif
    na_ontap_interface:
      state: present
      interface_name: "cluster_mgmt"
      vserver: "{{ cluster_name }}"
      address: "{{ cluster_ip }}"
      netmask: "{{ netmask }}"
      role: cluster-mgmt
      home_node: "{{ hosts['node1'].name }}"
      home_port: e0M
      hostname: "{{ hosts['node1'].mgmt_ip }}"
      <<: *login

  - name: Add applications to admin user 
    na_ontap_user:
      state: present
      name: admin
      applications: "ssh,console,http,ontapi,service-processor"
      authentication_method: password
      role_name: admin
      vserver: "{{ cluster_name }}"
      hostname: "{{ cluster_ip }}"
      <<: *login

  - name: Remove Private cluster lif for node2
    na_ontap_interface:
      state: absent
      interface_name: "{{ hosts['node2'].name }}_clus3"
      vserver: "Cluster"
      address: "{{ hosts['node2'].cluster.private_ip }}"
      netmask: "{{ hosts['node2'].cluster.netmask }}"
      role: cluster
      home_node: "localhost"
      home_port: "{{ hosts['node2'].cluster.home_port }}"
      hostname: "{{ hosts['node2'].mgmt_ip }}"
      <<: *login

  - name: Delete temp mgmt lif
    na_ontap_interface:
      state: absent
      interface_name: mgmt_auto
      vserver: "{{ cluster_name }}"
      hostname: "{{ cluster_ip }}"
      <<: *login

  
  - name: Limit Info Gathering  Root Aggregate Information as Cluster Admin
    na_ontap_info:
      gather_subset: "aggregate_info"
      query:
        aggr-attributes:
          aggr-raid-attributes:
            is-root-aggregate: true
      <<: *login
      hostname: "{{ cluster_ip }}"
    register: AGGR_info

 
  - name: Rename Root Aggregates
    na_ontap_aggregate:
      state: present
      service_state: online
      from_name: "{{item.key}}"
      name: "{{item.key | replace ('aggr0','root_aggr') }}"
      <<: *login
      hostname: "{{ cluster_ip }}"
    with_dict: 
      "{{AGGR_info.ontap_info.aggregate_info}}"



  - name: Limit Info Gathering  to Node-mgmt lifs
    na_ontap_info:
      gather_subset: "net_interface_info"
      query:
        net-interface-info:
          vserver: 'ath-cl'
          role: 'node_mgmt'
      <<: *login
      hostname: "{{ cluster_ip }}"
    register: Net_info
    


  - name: Rename Node-mgmt lifs
    netapp.ontap.na_ontap_interface:
      state: present
      from_name: "{{ item.key }}"
      interface_name: "{{ item.key | replace ('_auto','') }}"
      vserver: "{{ cluster_name }}"
      <<: *login
      hostname: "{{ cluster_ip }}"
    with_dict: 
      "{{ Net_info.ontap_info.net_interface_info }}"
    

  
  
- name: import playbook For Creating Cluster (Before NL-SAS shelf)
  import_playbook: ClusterInit.yml

- name: import playbook
  import_playbook: ConfigCluster.yml

